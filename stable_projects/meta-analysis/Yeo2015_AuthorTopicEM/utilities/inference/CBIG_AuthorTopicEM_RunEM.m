function CBIG_AuthorTopicEM_RunEM(seed, K, input_file, brain_mask2mm, alpha, eta, init_type, init_file)
% CBIG_AuthorTopicEM_RunEM(seed, K, input_file, brain_mask2mm, alpha, eta, init_type, init_file)
%
% Wrapper function to estimate the author-topic model's parameters using the Expectation-Maximization (EM)
% inference algorithm for a given initialization seed
%
% Input:
%   - seed          = seed used by Matlab's random number generator
%   - K             = number of components to be estimated
%   - input_file    = input data file for the EM algorithm, generated by
%                     CBIG_AuthorTopicEM_ConvertActToEMFormat
%   - brain_mask2mm = struct containing a brain mask at 2mm resolution (read by MRIread)
%   - alpha & eta   = hyperparameters of the author topic model's Dirichlet
%                     priors.
%   - init_type     = a string used to determine how the auxiliary parameter
%                     of the model is generated. 'RAND' if the auxiliary
%                     parameter is randomly generated, 'GIBBS' if the auxiliary
%                     parameter is the output of Gibbs sampling
%   - init_file     = if init_type = 'GIBBS', the output of GIBBS sampling from
%                     init_file is used
% Output:
%   Output of EM algorithm is saved at 
%   EM_outputs_<init_type>_init/K<K>/alpha<alpha>_eta<eta>/seed<seed>.mat
%
% Example:
%   input_file = '~/Work/em_at_data.mat';
%   brain_mask2mm = MRIread(fullfile(getenv('CBIG_CODE_DIR'), 'stable_projects', ...
%       'meta-analysis', 'Yeo2015_AuthorTopicEM', 'utilities', ...
%       'mask', 'MNI_mask_conformed.2mm.0.1.nii.gz'));
%   init_file = '~/Work/GIBBS_outputs/K2/alpha100_eta0.01/seed42/seed42.burn2.int2.sample1.mat';
%   CBIG_AuthorTopicEM_RunEM(42, 2, input_file, brain_mask2mm, 100, 0.01, 'GIBBS', init_file)
%
%   Perform model parameters estimate with EM algorithm for seed 42 with 2 components, initialized
%   with alpha = 100, eta = 0.01 and outputs from the Gibbs sampler.
%
% Written by B.T.Thomas Yeo and CBIG under MIT license: https://github.com/ThomasYeoLab/CBIG/blob/master/LICENSE.md

  if(nargin < 8)
      if (strcmp(init_type, 'GIBBS'))
          error('Missing initialization from Gibbs sampling');
      end
      init_type = 'RAND';
  end  

  if(nargin < 5)
      eta = 0.01;
      alpha = 100;
  end
  
  if(ischar(eta))
     eta = str2num(eta);
  end
  
  if(ischar(alpha))
     alpha = str2num(alpha);
  end
  
  if(ischar(seed))
     seed = str2num(seed);
  end
  
  if(ischar(K))
     K = str2num(K);
  end
  
  % load gibbs input
  load(input_file);
  corpus = cell(size(corpus1, 1), 3);
  corpus(:, 1) = corpus1;
  corpus(:, 2) = corpus2;
  corpus(:, 3) = corpus3;
  clear corpus1; clear corpus2; clear corpus3;
  
  if(nargin < 8)
      params = CBIG_AuthorTopicEM_CreateEmptyParams(seed, K, brain_mask2mm);
  else
      params = CBIG_AuthorTopicEM_CreateEmptyParams(seed, K, brain_mask2mm, init_type, init_file);
  end
  params.virtual_beta  = eta;
  params.virtual_theta = alpha;
  
  disp('Running EM on AT model with following parameters: ');
  disp(' ');
  disp(params);
  
  output_dir = fullfile(['EM_outputs_' params.init_type '_init'], ...
    ['K', num2str(K)], ['alpha' num2str(alpha) '_eta' num2str(eta)]);
  system(['mkdir -p ' output_dir]);
  params = CBIG_AuthorTopicEM_Inference(corpus, paradigm_by_exp, params);
  
  save(fullfile(output_dir, ['seed' num2str(seed) '.mat']), 'params');
